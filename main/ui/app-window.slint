import { LineEdit, Button } from "std-widgets.slint";

export component AppWindow inherits Window {
    in property <string> data-out: "";

    callback is_correct(string);

    min-width: 400px;
    preferred-width: self.min-width;
    max-width: 1920px;

    min-height: 400px;
    preferred-height: self.min-height;
    max-height: 1080px;

    GridLayout {
        spacing-vertical: 20px;
        padding-left: parent.width * 0.1;
        padding-right: parent.width * 0.1;

        Row {
            Text {
                text: "Match this expression!\n[A-Za-z]\\.[a-z$!?_]*";
                font-size: 20px;
                font-weight: 750;
                horizontal-alignment: center;
                vertical-alignment: center;
                max-height: 60px;
            }
        }

        Row {
            VerticalLayout {
                max-height: 80px;

                Text {
                    text: "input: ";
                    font-size: 15px;
                    font-weight: 500;
                    horizontal-alignment: left;
                }

                Rectangle {
                    background: green;
                    border-color: yellowgreen;
                    border-radius: 4px;
                    width: root.width * 0.8;
                    height: 60px;

                    input := LineEdit {
                        placeholder-text: "s.example";
                        width: parent.width;
                        height: parent.height;
                    }
                }
            }
        }

        Row {
            VerticalLayout {
                max-height: 80px;
                
                Text {
                    text: "output: ";
                    font-size: 15px;
                    font-weight: 500;
                    horizontal-alignment: left;
                }

                Rectangle {
                    background: rebeccapurple;
                    border-color: blueviolet;
                    border-radius: 4px;
                    width: root.width * 0.8;
                    height: 60px;

                    output := Text {
                        text: root.data-out;
                        font-size: 15px;
                        font-weight: 500;
                        width: parent.width * 0.9;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }
                }
            }
        }

        Row {

            Rectangle {
                background: black;
                border-color: yellow;
                border-radius: 4px;
                width: root.width * 0.8;
                height: 60px;

                Button {
                    text: "Try";
                    width: parent.width * 0.97;
                    height: parent.height * 0.8;
                    clicked => { is_correct(input.text); }  
                }
            }
        }

        Row {}
    }
}
